apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

group='com.github.mirrajabi'
version='1.0'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"

    defaultConfig {
        minSdkVersion 4
        targetSdkVersion 24
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'ViewEffects'
                url 'https://github.com/mirrajabi/ViewEffects'
                description 'Apply custom effects on view backgrounds'
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'mirrajabi'
                        name 'Mohammad Mirrajabi'
                        email 'mohammadmirrajabi@gmail.com'
                    }
                }
                scm {
                    connection 'https://github.com/mirrajabi/ViewEffects.git'
                    developerConnection 'https://github.com/mirrajabi/ViewEffects.git'
                    url 'https://github.com/mirrajabi/ViewEffects'
                }
            }
        }
    }
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}